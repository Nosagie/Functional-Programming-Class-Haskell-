--Lazy Evaluation
f1 :: Maybe a -> [Maybe a]
f1 m = [m,m]

f2 :: Maybe a -> [a]
f2 Nothing = []
f2 (Just x) = [x]


repeat :: a -> [a]
repeat x = x : repeat x

take :: Int -> [a] -> [a]
take n     | n <= 0 = []
take _ []			= []
take n (x:xs) = x : take(n-1) xs